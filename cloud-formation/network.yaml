AWSTemplateFormatVersion: '2010-09-09'

Description: Deploys a VPC

Parameters:
  NetworkName:
    Description: The name of the network
    Type: String
    Default: core-network
  CidrBlock:
    Description: The IP address range (CIDR notation) for the VPC
    Type: String
    Default: 10.0.0.0/16

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref NetworkName
  IPv6CidrBlock:
    Type: AWS::EC2::VPCCidrBlock
    Properties:
      VpcId: !Ref VPC
      AmazonProvidedIpv6CidrBlock: true
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${NetworkName}-internet-gateway
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PublicSubnet1:
    DependsOn: IPv6CidrBlock
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AssignIpv6AddressOnCreation: true
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      CidrBlock: !Select
        - 0
        - !Cidr
          - !GetAtt VPC.CidrBlock
          - 6
          - 8
      Ipv6CidrBlock: !Select
        - 0
        - !Cidr
          - !Select
            - 0
            - !GetAtt VPC.Ipv6CidrBlocks
          - 6
          - 64
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${NetworkName}-public-subnet-1
  PublicSubnet2:
    DependsOn: IPv6CidrBlock
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AssignIpv6AddressOnCreation: true
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      CidrBlock: !Select
        - 1
        - !Cidr
          - !GetAtt VPC.CidrBlock
          - 6
          - 8
      Ipv6CidrBlock: !Select
        - 1
        - !Cidr
          - !Select
            - 0
            - !GetAtt VPC.Ipv6CidrBlocks
          - 6
          - 64
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${NetworkName}-public-subnet-2
  PublicSubnet3:
    DependsOn: IPv6CidrBlock
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AssignIpv6AddressOnCreation: true
      AvailabilityZone: !Select
        - 2
        - !GetAZs ''
      CidrBlock: !Select
        - 2
        - !Cidr
          - !GetAtt VPC.CidrBlock
          - 6
          - 8
      Ipv6CidrBlock: !Select
        - 2
        - !Cidr
          - !Select
            - 0
            - !GetAtt VPC.Ipv6CidrBlocks
          - 6
          - 64
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${NetworkName}-public-subnet-3
  PrivateSubnet1:
    DependsOn: IPv6CidrBlock
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AssignIpv6AddressOnCreation: true
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      CidrBlock: !Select
        - 3
        - !Cidr
          - !GetAtt VPC.CidrBlock
          - 6
          - 8
      Ipv6CidrBlock: !Select
        - 3
        - !Cidr
          - !Select
            - 0
            - !GetAtt VPC.Ipv6CidrBlocks
          - 6
          - 64
      Tags:
        - Key: Name
          Value: !Sub ${NetworkName}-private-subnet-1
  PrivateSubnet2:
    DependsOn: IPv6CidrBlock
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AssignIpv6AddressOnCreation: true
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      CidrBlock: !Select
        - 4
        - !Cidr
          - !GetAtt VPC.CidrBlock
          - 6
          - 8
      Ipv6CidrBlock: !Select
        - 4
        - !Cidr
          - !Select
            - 0
            - !GetAtt VPC.Ipv6CidrBlocks
          - 6
          - 64
      Tags:
        - Key: Name
          Value: !Sub ${NetworkName}-private-subnet-2
  PrivateSubnet3:
    DependsOn: IPv6CidrBlock
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AssignIpv6AddressOnCreation: true
      AvailabilityZone: !Select
        - 2
        - !GetAZs ''
      CidrBlock: !Select
        - 5
        - !Cidr
          - !GetAtt VPC.CidrBlock
          - 6
          - 8
      Ipv6CidrBlock: !Select
        - 5
        - !Cidr
          - !Select
            - 0
            - !GetAtt VPC.Ipv6CidrBlocks
          - 6
          - 64
      Tags:
        - Key: Name
          Value: !Sub ${NetworkName}-private-subnet-3
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${NetworkName}-public-routes
  IPv4DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  IPv6DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationIpv6CidrBlock: '::/0'
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${NetworkName}-private-routes
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2
  PrivateSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet3
  NatGatewayElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayElasticIP.AllocationId
      ConnectivityType: public
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${NetworkName}-nat-gateway
  NatGatewayPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

Outputs:
  VPC:
    Description: A reference to the VPC
    Export:
      Name: !Sub ${AWS::StackName}-VPC
    Value: !Ref VPC
  PublicSubnet1:
    Description: A reference to public subnet 1
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet1
    Value: !Ref PublicSubnet1
  PublicSubnet2:
    Description: A reference to public subnet 2
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet2
    Value: !Ref PublicSubnet2
  PublicSubnet3:
    Description: A reference to public subnet 3
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet3
    Value: !Ref PublicSubnet3
  PrivateSubnet1:
    Description: A reference to private subnet 1
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet1
    Value: !Ref PrivateSubnet1
  PrivateSubnet2:
    Description: A reference to private subnet 2
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet2
    Value: !Ref PrivateSubnet2
  PrivateSubnet3:
    Description: A reference to private subnet 3
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet3
    Value: !Ref PrivateSubnet3
